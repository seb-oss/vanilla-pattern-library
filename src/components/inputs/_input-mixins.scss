////
/// This file contains mixins for input components
/// @group Inputs
/// @author Digital CX
////

@import '../../variables';
@import '../../utilities';
@import '../../mixins';
@import '../../colors';
@import '../../functions';
@import '../buttons/button-mixins';

@import 'common';
@import 'stepper-mixins';
@import 'text-field-mixins';
@import 'toggle-type-input-mixins';
@import 'dropdown-mixins';

/// Style for checkbox wrap. This is meant to be applied to elements that
/// contain an input of type checkbox.
///
/// @access public
/// @param $_type How should it be rendered? checkbox or switch
@mixin vanilla-field-toggle-wrap($_type: 'checkbox') {
  @include vanilla-field-base();
  @include vanilla-toggle-base($_type);

  @if ($_type == 'switch') {
    input:checked:not(:disabled) + label::before {
      background-color: $vanilla-color-darkgreen1;
    }

    input:checked:focus + label::before {
      background-color: $vanilla-color-darkgreen2;
    }

    input:checked + label::after {
      @include vanilla-toggle-switch__checked-label-after();
    }

    input:not(:checked):focus + label::before {
      background-color: $_toggle-switch-color-bg-hover;
    }

    &:hover input:not(:disabled):not(:checked) {
      + label::before {
        background-color: $_toggle-switch-color-bg-hover;
      }

      + label::after {
        left: $_toggle-base-padding-horizontal +
          $_toggle-switch-after-padding-hover;
      }
    }

    &:hover input:not(:disabled):checked + label::before {
      background-color: $vanilla-color-darkgreen2;
    }

    &:hover input:not(:disabled):checked + label::after {
      @include vanilla-toggle-switch__hover-checked-label-after();
    }

  } @else {
    input:checked + label::before {
      background-color: $vanilla-color-component-selected;
      border-color: $vanilla-color-component-selected;
    }

    input:checked + label::after {
      display: block;
      content: '';
      position: absolute;
      top: 0.5em + 0.25em + vanilla-px-to-em(1px);
      left: 1em + vanilla-px-to-em(1px);
      box-sizing: border-box;
      background-color: transparent;
      width: (1 / 2.7) * 1em;
      border: 0 solid $vanilla-color-white;
      border-width: 0 vanilla-px-to-em(2px) vanilla-px-to-em(2px) 0;
      height: (1 / 1.5) * 1em;
      transform: rotate(40deg);
      transform-origin: 50% 50%;
    }
  }
}

/// Radio button styles
///
/// @access public
@mixin vanilla-field-radio-wrap() {
  @include vanilla-field-base();
  @include vanilla-toggle-base('radio');

  input:checked + label::after {
    display: block;
    content: '';
    position: absolute;
    top: 1em;
    left: 1em;
    background-color: $vanilla-color-component-selected;
    width: 0.5em;
    height: 0.5em;
    border-radius: 50%;
  }
}

/// Toggle selector
///
/// @access public
@mixin vanilla-field-toggle-selector() {
  $_padding_x: 1.5em;
  $_padding_y: 0.5em;
  $_iconSize: 35px;

  label,
  &__label {
    box-sizing: border-box;
    width: 100%;
    min-height: vanilla-px-to-em(72px);
    background-color: $vanilla-color-white;
    border: 1px solid $vanilla-color-grey6;
    padding: $_padding_y $_padding_x;
    font-weight: 500;
    border-radius: $vanilla-component-border-radius;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $vanilla-color-text;
    text-align: center;

    // Should apply to only IE10+
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      min-height: auto;
      padding: vanilla-rem-to-px($_padding_y) + 5px $_padding_x;
    }

    &.sdv-align-left {
      text-align: left;
      justify-content: left;
    }
  }

  input {
    position: absolute;
    opacity: 0;
  }

  input:checked + label,
  .-selected &__label {
    border-color: $vanilla-color-component-selected;
    color: $vanilla-color-component-selected;
    border-width: 2px;
    padding: calc(#{$_padding_y} - 1px) calc(#{$_padding_x} - 1px);

    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      padding: calc(#{$_padding_y} + 4px) calc(#{$_padding_x} - 1px);
    }
  }

  label:hover,
  &__label:hover,
  input:checked + label:hover,
  .-selected &__label:hover {
    border-color: $vanilla-color-component-hover;
    color: $vanilla-color-component-hover;
  }

  input:focus + label,
  .-focus &__label {
    @include vanilla-focus-outline();
  }

  input:disabled + label,
  .-disabled &__label {
    background-color: $vanilla-color-grey8;
    border-color: $vanilla-color-grey8;
    color: $vanilla-color-grey7;
  }

  label,
  &__label {
    &.sdv-icon {
      position: relative;
      padding-left: vanilla-px-to-em(24 + $_iconSize + 24);

      &::before {
        width: 24 + $_iconSize + 24;
        text-align: center;
        position: absolute;
        line-height: 1;
        left: 0;
        font-size: vanilla-px-to-em($_iconSize);
      }
    }

    // Should apply to only IE10+
    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
      &.sdv-icon::before {
        top: 50%;
        transform: translateY(-50%);
        margin-top: 2px;
      }
    }
  }

  input:checked + label,
  .-selected &__label {
    &.sdv-icon {
      padding-left: vanilla-px-to-em(24 - 1 + $_iconSize + 24);

      &::before {
        width: 24 - 1 + $_iconSize + 24 - 1;
        left: 0;
        //font-size: vanilla-px-to-em($_iconSize);
      }
    }
  }
}
